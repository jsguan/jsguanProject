import java.util.Hashtable;

import java.util.Enumeration;

 

import javax.naming.*;

import javax.naming.directory.*;

import javax.naming.ldap.*;

import com.sun.jndi.ldap.ctl.*;

 

class paged {

 

public static void main(String[] args) {

 

 

        Hashtable env = new Hashtable();

        String adminName = "CN=Administrator,CN=Users,DC=antipodes,DC=com";

        String adminPassword = "XXXXXXXX";

        String searchBase = "DC=antipodes,DC=com";

        String searchFilter = "(&(objectClass=user)(mail=*))";

        

        
env.put(Context.INITIAL_CONTEXT_FACTORY,"com.sun.jndi.ldap.LdapCtxFact
ory");

 

        //set security credentials, note using simple cleartext 
authentication


        env.put(Context.SECURITY_AUTHENTICATION,"simple");

        env.put(Context.SECURITY_PRINCIPAL,adminName);

        env.put(Context.SECURITY_CREDENTIALS,adminPassword);

                

        //connect to my domain controller

        env.put(Context.PROVIDER_URL, "ldap://mydc.antipodes.com:389");

        try {

 

            // Create the initial directory context

            LdapContext ctx = new InitialLdapContext(env,null);

        

            // Create the search controls       

            SearchControls searchCtls = new SearchControls();

        

            //Specify the attributes to return

            String returnedAtts[]={"sn","givenName","mail"};

            searchCtls.setReturningAttributes(returnedAtts);

        

            //Specify the search scope

            searchCtls.setSearchScope(SearchControls.SUBTREE_SCOPE);

 

            //Set the page size and initialize the cookie that we pass back 
in su
bsequent pages

            int pageSize = 10;

            byte[] cookie = null;

 

            //Request the paged results control

            Control[] ctls = new Control[]{new 
PagedResultsControl(pageSize)};

            ctx.setRequestControls(ctls);

 

            //initialize counter to total the results

            int totalResults = 0;

 

            // Search for objects using the filter

 

            do {

                NamingEnumeration results = ctx.search(searchBase, 
searchFilter, sea
rchCtls);

 

                    // loop through the results in each page

 

                    while (results != null && results.hasMoreElements()) {

                SearchResult sr = (SearchResult)results.next();

 

                //print out the name 

                System.out.println("name: " + sr.getName());

 

                //increment the counter

                totalResults++; 

 

                    }

    

    

            // examine the response controls

            cookie = parseControls(ctx.getResponseControls());

 

                    // pass the cookie back to the server for the next page

            ctx.setRequestControls(new Control[]{new 
PagedResultsControl(pageSize
, cookie, Control.CRITICAL) });

 

            } while ((cookie != null) && (cookie.length != 0));

 

    

            ctx.close();

 

            System.out.println("Total entries: " + totalResults);

 

 

            } 

        catch (NamingException e) {

            System.err.println("Paged Search failed." + e);

            }   

        catch (java.io.IOException e) {

            System.err.println("Paged Search failed." + e);

            } 

    }

 

    static byte[] parseControls(Control[] controls) throws NamingException 
{

 

        byte[] cookie = null;

 

        if (controls != null) {

 

                for (int i = 0; i < controls.length; i++) {

                if (controls[i] instanceof PagedResultsResponseControl) {

                    PagedResultsResponseControl prrc = 
(PagedResultsResponseControl)con
trols[i];

                    cookie = prrc.getCookie();

                    System.out.println(">>Next Page \n");

                }

                }

        }

 

        return (cookie == null) ? new byte[0] : cookie;

        }

}